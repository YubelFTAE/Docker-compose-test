# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)
version: '3.3'

# Define services
services:
  # App backend service
  bom-server:
    build:
      context: src/bom_api # Use an image built from the specified dockerfile in the `polling-app-server` directory.
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
    depends_on:
      - postgres # This service depends on postgres. Start that first.
    environment: # Pass environment variables to the service
      # SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bom?useSSL=true
      SPRING_DATASOURCE_URL: jdbc:postgresql://192.168.203.140:5432/bom?useSSL=true
      SPRING_DATASOURCE_USERNAME: bom_user
      SPRING_DATASOURCE_PASSWORD: vttek@123
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
      - frontend

  # Frontend Service
  bom-client:
    build:
      context: src/vt_manager_bom # Use an image built from the specified dockerfile in the `polling-app-client` directory.
      dockerfile: Dockerfile
    #  args:
    #    REACT_APP_API_BASE_URL: http://127.0.0.1:8080/api
    ports:
      - "80:80" # Forward the exposed port 80 on the container to port 80 on the host machine
      - "443:443"
    restart: always
    volumes:
      - ./apache/ssl:/etc/apache2/ssl
      - ./apache/config/000-default.conf:/etc/apache2/sites-enabled/000-default.conf
      - ./vt-config.php:/var/www/html/includes/vt-config.php
      - ./uploads:/var/www/html/uploads
    depends_on:
      - bom-server
    networks:
      - frontend

  # Database Service (postgres)
  postgres:
    image: "postgres:11"
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_USER: bom_user
      POSTGRES_PASSWORD: vttek@123
      POSTGRES_DB: bom
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./Status/:/app:delegated
      - ./LocalStorage/:/root/local:delegated
      - file:/app.jar!/BOOT-INF/classes!/templates:file:/app.jar!/BOOT-INF/classes!/templates:delegated
    networks:
      - backend

# Volumes
volumes:
  db-data:

# Networks to be created to facilitate communication between containers
networks:
  backend:
  frontend:
